{"version":3,"sources":["components/gif-grid/GifGrid.module.scss","components/gif-grid-item/GifGridItem.module.scss","App.module.scss","components/gif-expert-app/GifExpertApp.module.scss","components/addCategory/AddCategory.module.scss","components/addCategory/AddCategory.jsx","components/gif-grid-item/GifGridItem.jsx","helpers/getGifs.js","skeleton/ImgSkeleton.jsx","components/gif-grid/GifGrid.jsx","hooks/useFetchGifs.js","components/gif-expert-app/GifExpertApp.jsx","App.js","index.js"],"names":["module","exports","AddCategory","props","useState","inputValue","setInputValue","setCategories","handleSubmit","e","preventDefault","trim","length","categs","onSubmit","className","styles","form","FormGroup","FormControl","InputLabel","htmlFor","sx","color","Input","id","aria-describedby","type","value","onChange","target","FormHelperText","Button","variant","onClick","GifGridItem","title","url","Card","card","CardMedia","component","image","alt","img","CardContent","cardContent","Typography","fontSize","getGifs","category","a","URL","encodeURI","fetch","resp","json","data","gifs","map","images","downsized_medium","ImgSkeleton","Box","width","marginRight","my","Skeleton","height","pt","GifGrid","loading","state","setState","useEffect","then","imgs","setTimeout","useFetchGifs","li","ul","Array","from","item","GifExpertApp","categories","container","App","header","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.0b811da4.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"cardsContainer\":\"GifGrid_cardsContainer__2CmlN\",\"title\":\"GifGrid_title__1fio-\",\"ul\":\"GifGrid_ul__zWKUW\",\"li\":\"GifGrid_li__3OCAd\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"imgCard\":\"GifGridItem_imgCard__3WnnW\",\"card\":\"GifGridItem_card__YN8L9\",\"cardContent\":\"GifGridItem_cardContent__3heiv\",\"img\":\"GifGridItem_img__3W0UY\",\"li\":\"GifGridItem_li__2CKtp\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"header\":\"App_header__1PAQ_\",\"container\":\"App_container__2AjWD\",\"title\":\"App_title__1b-Fh\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"GifExpertApp_container__3OJO4\",\"ul\":\"GifExpertApp_ul__Fy1jq\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"form\":\"AddCategory_form__2AwXy\"};","import React, { useState } from \"react\";\r\nimport PropTypes from \"prop-types\";\r\nimport {\r\n  Button,\r\n  FormControl,\r\n  FormGroup,\r\n  Input,\r\n  InputLabel,\r\n  FormHelperText,\r\n} from \"@mui/material\";\r\nimport styles from './AddCategory.module.scss';\r\n\r\nconst AddCategory = (props) => {\r\n  const [inputValue, setInputValue] = useState(\"\");\r\n  const { setCategories } = props;\r\n  const handleInputChange = (e) => {\r\n    setInputValue(e.target.value);\r\n  };\r\n  const handleSubmit = (e) => {\r\n    e.preventDefault();\r\n    // validación de la categoría a agregar\r\n    if (inputValue.trim().length > 2) {\r\n      setCategories((categs) => [inputValue, ...categs]);\r\n      setInputValue(\"\");\r\n    }\r\n  };\r\n\r\n  const handleClick = (e) => handleSubmit(e);\r\n\r\n  return (\r\n    <form onSubmit={handleSubmit} className={styles.form}>\r\n      <FormGroup>\r\n        <FormControl>\r\n          <InputLabel htmlFor=\"agregar-categoria\" sx={{color: '#e3f2fd'}}>Agregar Categoría</InputLabel>\r\n          <Input\r\n            id=\"agregar-categoria\"\r\n            aria-describedby=\"nueva-categoria\"\r\n            type=\"text\"\r\n            value={inputValue}\r\n            onChange={handleInputChange}\r\n            sx={{color: '#e3f2fd'}}\r\n          />\r\n          <FormHelperText id=\"nueva-categoria\">\r\n            Campo para agregar categoría.\r\n          </FormHelperText>\r\n        </FormControl>\r\n        <Button variant=\"contained\" sx={{color: '#e3f2fd'}} color=\"success\" onClick={handleClick}>\r\n          Agregar\r\n        </Button>\r\n      </FormGroup>\r\n    </form>\r\n  );\r\n};\r\n\r\nAddCategory.propTypes = {\r\n  setCategories: PropTypes.func.isRequired,\r\n};\r\n\r\nexport default AddCategory;\r\n","import { Card, CardContent, CardMedia, Typography } from \"@mui/material\";\r\nimport React from \"react\";\r\nimport styles from \"./GifGridItem.module.scss\";\r\n\r\nconst GifGridItem = (props) => {\r\n  const { title, url } = props;\r\n\r\n  return (\r\n    <Card className={styles.card}>\r\n      <CardMedia\r\n        component=\"img\"\r\n        image={url}\r\n        alt={`Imagen animada de ${title}`}\r\n        className={styles.img}\r\n      />\r\n      <CardContent className={styles.cardContent}>\r\n        <Typography variant=\"h5\" component=\"h5\" sx={{ fontSize: 16 }}>\r\n          {title}\r\n        </Typography>\r\n      </CardContent>\r\n    </Card>\r\n  );\r\n};\r\n\r\nexport default GifGridItem;\r\n","export const getGifs = async (category) => {\r\n  const GIF_URL = \"api.giphy.com/v1/gifs/search\";\r\n  const apiKey = \"Ph4pFgWwElK9iwz5toxhaFYs7MPsBZj9\";\r\n  const limit = 10;\r\n  const URL = `https://${GIF_URL}?q=${encodeURI(\r\n    category\r\n  )}&limit=${limit}&api_key=${apiKey}`;\r\n\r\n  const resp = await fetch(URL);\r\n  const { data } = await resp.json();\r\n\r\n  const gifs = data.map((img) => {\r\n    return {\r\n      id: img.id,\r\n      title: img.title,\r\n      url: img.images?.downsized_medium?.url,\r\n    };\r\n  });\r\n  return gifs;\r\n};\r\n","import React from \"react\";\r\nimport Box from \"@mui/material/Box\";\r\nimport Skeleton from \"@mui/material/Skeleton\";\r\n\r\nconst ImgSkeleton = () => {\r\n\r\n  return (\r\n      <Box sx={{ width: 220, marginRight: 0.5, my: 5 }}>\r\n        <Skeleton variant=\"rectangular\" width={220} height={118} />\r\n        <Box sx={{ pt: 0.5 }}>\r\n          <Skeleton />\r\n          <Skeleton width=\"60%\" />\r\n        </Box>\r\n      </Box>\r\n  );\r\n};\r\n\r\nexport default ImgSkeleton;\r\n","import React from \"react\";\r\n\r\nimport GifGridItem from \"../gif-grid-item/GifGridItem\";\r\nimport { useFetchGifs } from \"../../hooks/useFetchGifs\";\r\nimport styles from \"./GifGrid.module.scss\";\r\nimport ImgSkeleton from \"../../skeleton/ImgSkeleton\";\r\n\r\nconst GifGrid = (props) => {\r\n  const { category } = props;\r\n  const { data: images, loading } = useFetchGifs(category);\r\n\r\n  return (\r\n    <li className={styles.li}>\r\n      <h3 className={styles.title}>{category}</h3>\r\n      {loading ? (\r\n        <ul className={styles.ul}>\r\n          {Array.from(new Array(5)).map((item) => (\r\n            <ImgSkeleton key={item} />\r\n          ))}\r\n        </ul>\r\n      ) : (\r\n        <ul className={styles.ul}>\r\n          {images.map((img) => (\r\n            <GifGridItem key={img.id} {...img} />\r\n          ))}\r\n        </ul>\r\n      )}\r\n    </li>\r\n  );\r\n};\r\n\r\nexport default GifGrid;\r\n","import { useEffect, useState } from \"react\";\r\nimport { getGifs } from \"../helpers/getGifs\";\r\n\r\nexport const useFetchGifs = (category) => {\r\n  const [state, setState] = useState({\r\n    data: [],\r\n    loading: true,\r\n  });\r\n\r\n  useEffect(() => {\r\n    getGifs(category).then((imgs) => {\r\n      setTimeout(() => {\r\n        setState({\r\n          data: imgs,\r\n          loading: false,\r\n        });\r\n      }, 900);\r\n    });\r\n  }, [category]);\r\n\r\n  return state;\r\n};\r\n","import React, { useState } from \"react\";\r\n\r\nimport AddCategory from \"../addCategory/AddCategory\";\r\nimport GifGrid from \"../gif-grid/GifGrid\";\r\nimport styles from \"./GifExpertApp.module.scss\";\r\n\r\nconst GifExpertApp = () => {\r\n  const [categories, setCategories] = useState([\r\n    \"Los simpsons\",\r\n  ]);\r\n\r\n  return (\r\n    <section className={styles.container}>\r\n      <AddCategory setCategories={setCategories} />\r\n      <ul className={styles.ul}>\r\n        {categories.map((category) => (\r\n          <GifGrid key={category} category={category} />\r\n        ))}\r\n      </ul>\r\n    </section>\r\n  );\r\n};\r\n\r\nexport default GifExpertApp;\r\n","import { Fragment } from \"react\";\r\nimport GifExpertApp from \"./components/gif-expert-app/GifExpertApp\";\r\nimport styles from \"./App.module.scss\";\r\n\r\nfunction App() {\r\n  return (\r\n    <Fragment>\r\n      <header className={styles.header}>\r\n        <h1 className={styles.title}>Gif Expert App</h1>\r\n      </header>\r\n      <main className={styles.container}>\r\n        <GifExpertApp />\r\n      </main>\r\n      <footer></footer>\r\n    </Fragment>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","import React from \"react\";\r\nimport ReactDOM from \"react-dom\";\r\nimport App from './App';\r\nimport 'normalize.css';\r\n\r\nReactDOM.render(<App />, document.getElementById(\"root\"));"],"sourceRoot":""}